<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Covi.Converters;assembly=Covi"
    xmlns:controls="clr-namespace:Covi.Features.Controls"
    xmlns:effects="clr-namespace:Covi.Effects"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:components="clr-namespace:Covi.Features.Components;assembly=Covi"
    xmlns:forms="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
    xmlns:platformSpecific="clr-namespace:Covi.PlatformSpecific;assembly=Covi">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ContentPageStyleBase"
           TargetType="ContentPage">
        <Setter
            Property="Shell.BackgroundColor"
            Value="{DynamicResource BackgroundColor}" />
    </Style>

    <Style x:Key="ModalPageStyle"
           BasedOn="{StaticResource ContentPageStyleBase}"
           TargetType="ContentPage">
        <Setter Property="Shell.TabBarIsVisible" Value="false"/>

    </Style>

    <Style x:Key="RootPageStyle"
           BasedOn="{StaticResource ContentPageStyleBase}"
           TargetType="ContentPage">
        <Setter Property="ios:Page.UseSafeArea" Value="true"/>
        <Setter Property="NavigationPage.HasNavigationBar" Value="False"/>
    </Style>

    <Style x:Key="RootStandalonePageStyle"
           BasedOn="{StaticResource ContentPageStyleBase}"
           TargetType="ContentPage">
        <Setter Property="ios:Page.UseSafeArea" Value="true"/>
        <Setter Property="NavigationPage.HasNavigationBar" Value="False"/>
    </Style>

    <Style x:Key="ContentPageStyle"
           BasedOn="{StaticResource ContentPageStyleBase}"
           TargetType="ContentPage">
        <Setter Property="ios:Page.UseSafeArea" Value="true" />
    </Style>

    <Style
        x:Key="DashedLineStyle"
        TargetType="platformSpecific:DashedLine">
        <Setter
            Property="HeightRequest"
            Value="2" />
        <Setter
            Property="BackgroundColor"
            Value="{StaticResource SurfaceColor}" />
        <Setter
            Property="Color"
            Value="#CCCCCC" />
        <Setter
            Property="LineWidth"
            Value="2" />
    </Style>

    <Style
        x:Key="HeroButtonStyle"
        TargetType="Button">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource AccentColor}" />
        <Setter
            Property="TextColor"
            Value="{DynamicResource OnPrimaryColor}" />
        <Setter
            Property="FontSize"
            Value="12"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Medium" />
                    <On Platform="Android" Value="SFProDisplay-Medium.ttf#Medium" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start Delete me -->
    <Style
        x:Key="ButtonStyle"
        TargetType="Button">
        <Setter
            Property="BackgroundColor"
            Value="{DynamicResource PrimaryColor}" />
        <Setter
            Property="FontSize"
            Value="12"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Medium" />
                    <On Platform="Android" Value="SFProDisplay-Medium.ttf#Medium" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{StaticResource OnPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <!-- End Delete me -->

    <Style
        x:Key="FlatButtonStyle"
        TargetType="Button">
        <Setter
            Property="BackgroundColor"
            Value="Transparent" />
        <Setter
            Property="TextColor"
            Value="{DynamicResource AccentColor}" />
        <Setter
            Property="FontSize"
            Value="15"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Regular" />
                    <On Platform="Android" Value="SFProDisplay-Regular.ttf#Regular" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FlatButtonStyleBold"
        TargetType="Button"
        BasedOn="{StaticResource FlatButtonStyle}">
        <Setter
            Property="FontSize"
            Value="16"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Semibold" />
                    <On Platform="Android" Value="SFProDisplay-Semibold.ttf#Semibold" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CardStyle" TargetType="controls:Card">
        <Setter Property="BackgroundColor" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="CornerRadius" Value="1"/>
    </Style>

    <Style
        x:Key="PrimaryTextStyle"
        TargetType="Label">
        <Setter
            Property="TextColor"
            Value="{DynamicResource OnSecondaryColor}"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Light" />
                    <On Platform="Android" Value="SFProDisplay-Light.ttf#Light" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SecondaryTextStyle"
        TargetType="Label">
        <Setter
            Property="TextColor"
            Value="{DynamicResource OnSecondaryColor}"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform
                    x:TypeArguments="x:String">
                    <On
                        Platform="iOS"
                        Value="SFProDisplay-Regular"/>
                    <On
                        Platform="Android"
                        Value="SFProDisplay-Regular.ttf#Regular"/>
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AccentTextStyle"
        TargetType="Label">
        <Setter
            Property="TextColor"
            Value="{DynamicResource AccentColor}"/>
        <Setter
            Property="FontFamily">
            <Setter.Value>
                <OnPlatform x:TypeArguments="x:String">
                    <On Platform="iOS" Value="SFProDisplay-Regular" />
                    <On Platform="Android" Value="SFProDisplay-Regular.ttf#Regular" />
                </OnPlatform>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PageHeaderStyle" TargetType="ContentView">
        <Setter Property="BackgroundColor" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="Padding" Value="24,16"/>
    </Style>

    <Style x:Key="PageHeaderVariant2Style" TargetType="ContentView">
        <Setter Property="BackgroundColor" Value="{StaticResource AccentColor}"/>
        <Setter Property="Padding" Value="24,16"/>
    </Style>

    <Style x:Key="ContentContainerStyle" TargetType="Layout">
        <Setter Property="Padding" Value="24,16"/>
    </Style>

    <Style x:Key="ContentContainerVariant2Style" TargetType="Layout">
        <Setter Property="Padding" Value="8,8"/>
        <Setter Property="BackgroundColor" Value="{StaticResource BackgroundColor}"/>
    </Style>

    <Style x:Key="ContentContainerCardStyle" TargetType="controls:Card">
        <Setter Property="BackgroundColor" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="Padding" Value="16,16"/>
    </Style>

    <Style x:Key="NestedContentContainerStyle" TargetType="Layout">
        <Setter Property="Padding" Value="8,0"/>
    </Style>

    <Style TargetType="components:CoviEntry">
        <Setter Property="UnderlineCorrectColor" Value="{StaticResource EntryUnderlineCorrectColor}"/>
        <Setter Property="UnderlineErrorColor" Value="{StaticResource EntryUnderlineErrorColor}"/>
        <Setter Property="UnderlineNormalColor" Value="{StaticResource EntryUnderlineColor}"/>
        <Setter Property="effects:BorderlessEntryEffect.UseEntryEffect" Value="true"/>
    </Style>

    <Style x:Key="IconImageStyle" TargetType="forms:SvgCachedImage">
        <Setter Property="WidthRequest" Value="{DynamicResource IconImageWidth}"/>
        <Setter Property="HeightRequest" Value="{DynamicResource IconImageHeight}"/>
    </Style>

    <Style x:Key="SeparatorStyle" TargetType="BoxView">
        <Setter Property="HeightRequest" Value="{DynamicResource SeparatorHeight}"/>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
        <Setter Property="Color" Value="{StaticResource SeparatorColor}"/>
    </Style>

    <Style x:Key="CircleBoxStyle" TargetType="BoxView">
        <Setter Property="WidthRequest" Value="16"/>
        <Setter Property="HeightRequest" Value="16"/>
        <Setter Property="CornerRadius" Value="8"/>
    </Style>

</ResourceDictionary>
